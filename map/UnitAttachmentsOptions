<?xml version="1.0" encoding="UTF-8"?>

 <!-- Unit Attachments -->
    <!-- Certain units require extra graphical icons present, for when technology is researched or damage is done.  Here is a list, in order of what is needed:
		Anything I list as "_something" means that you must have the units exact name in front of it, example: fighter_jp
		if the unit is called "aaGun" then you need units called "rockets", "rockets_r", and "aaGun_r"
		if the unit has "isAA", but is not exactly named "aaGun", then you need units called "_rockets" and "_r" and "_rockets_r"
		if the unit has "isRocket", you need "_rockets"
		if the unit has "isAAforCombatOnly" and/or "isAAforBombingThisUnitOnly", then you need "_r"
		if the unit has "isAir", but not "isStrategicBomber", then you need "_lr", and "_jp", and "_lr_jp"
		if the unit has "isAir", and is "isStrategicBomber", then you need "_lr", and "_hb", and "_lr_hb"
		if the unit has "isSub", then you need "_ss"
		if the unit has "isFactory", or is called "factory", then you need "_it", and "_it_hit"
		if a unit can be damaged (by being a factory, or by having "canBeDamaged", then you will need "_hit"
		if a unit can be disabled, then you will need "_disabled"
	-->
    <!-- the following options are allowed for "unitAttachment"
                  isAir								values: if a unit is air or not, defaults to false
                  isSea								values: if a unit is sea or not, defaults to false. any unit that is neither air or sea, is land
                  movement							values: the allowed movement of a unit, defaults to zero
                  attack								values: the attack value, where a rolled dice must be equal or less than to hit the enemy
                  defense								values: the defense value, where a rolled dice must be equal or less than to hit the enemy
                  hitPoints							values: how many hit points this unit has (default is 1)
                  
                  artillerySupportable					DEPRECATED: use SupportAttachment
                  artillery						DEPRECATED: use SupportAttachment
                  unitSupportCount					DEPRECATED: use SupportAttachment
                  attackRolls							values: number of rolls this unit gets on attack (default = 1)
                  defenseRolls						values: number of rolls this unit gets on defense (default = 1)
                  chooseBestRoll						values: true/false, whether we pick the best dice or use all dice rolls, when there is more than one roll (default false). When in Low Luck, we instead add +1 onto the power for each extra roll.
  isMarine							values: gives the unit bonus attack if it is attacking amphibiously. Is an integer, so you can set it to give 1, or -1, or 3, etc.
                  canBlitz							values: allows the unit to move through multiple empty enemy territories in one turn
    receivesAbilityWhenWith				values: gives a unit an ability when they are with, or on the same route as, another unit. currently only works with 'canBlitz'. example: value="canBlitz:armour"
                  canBeGivenByTerritoryTo				values: will allow a unit to be given from one player to another player, if it is in a territory with changeUnitOwners
                                          must be a list of Players who this unit can be given to.  example: value="Russians:Chinese"
                  canBeCapturedOnEnteringBy			values: will allow a unit to be captured from one player to another, if the specified player enters a territory with captureUnitOnEnteringBy
                                          must be a list of Players who this unit can be given to.  example: value="Russians:Chinese"
                  canInvadeOnlyFrom					values: is a colon dilimited list of the transporting units which this unit can perform amphibious assaults from.
                                          A unit which can not perform amphibious assaults may instead disembark during non-combat
                                          can be set to "all", or "none", or a list of some transports. if this option is not present, it defaults to "all"
                  requiresUnitsToMove					values: is a list of units required to be present in all territories of a unit's route for it to move.  Can have multiple instances. Only one instance needs to be true in order to move.
                                          Checks all owned/allied units in each territory along the unit's route for necessary units.
                                          examples: <option name="requiresUnitsToMove" value="Rail:Road"/> would mean we need at least one Rail AND at least one Road in order to move there.
                                          If after that line we had a second line saying <option name="requiresUnits" value="SuperRail"/> then it would mean OR we need at least one SuperRail.
                  
                  isLandTransportable					values: allows the unit to be transported by 'isLandTransport', if you have mechanizedInfantry technology
                  isInfantry						values: DEPRECATED, same as isLandTransportable
                  isLandTransport						values: allows the unit to transport "isLandTransportable" on a one-to-one basis, if you have the mechanizedInfantry technology
                                          If "transportCapacity" is set then use "transportCost" and be able to transport multiple units just like sea transports														
                  isAirTransportable					values: allows the unit to be transported by an "isAirTransport" unit, IF you have paratroopers technology
                  isAirTransport						values: allows an air unit to carry land units when you have paratroopers tech
                  transportCost						values: the space this unit takes up in a transport
                  transportCapacity					values: the amount of space of land units this unit can carry. can be used with sea or air units, except that air units will also require isAirTransport.
                  isCombatTransport					values: considers a unit to be a combat sea unit, even if it has transport capacity, for the purposes of convoys and restricted attack on transports
                  
                  canScramble						values: allows the aircraft to enter a surrounding sea zone if the enemy is doing an attack on or from the surrounding sea zone
                  maxScrambleDistance					values: the distance out an aircraft can scramble. anything higher than 1 is not supported well at this point.
                  isSuicide						values: DEPRECATED, use isSuicideOnAttack, isSuicideOnDefense, and isFirstStrike instead; sets isSuicideOnAttack to true, isFirstStrike to true, and isSuicideOnDefense to true if property "Defending Suicide and Munition Units Do Not Fire" is false
                  isSuicideOnAttack					values: unit suicides during round 1 when attacking, it will suicide right after its turn to fire so either right after normal rolls or right after first strike if that's set to true, can't target isSuicideOnDefense units since those will suicide themselves
                  isSuicideOnDefense					values: unit suicides during round 1 when defending, it will suicide right after its turn to fire so either right after normal rolls or right after first strike if that's set to true, can't target isSuicideOnAttack units since those will suicide themselves
                    isSuicideOnHit						values: if unit gets a hit in combat then it instantly dies, can be used for units like mines
                  isKamikaze						values: allows an air unit to use up all of its movement to go to a battle
                  isStrategicBomber					values: allows a unit to bombing factories and canBeDamaged units
                  bombingMaxDieSides					values: is the max dice sides for a strategic bombing or rocket attack.  the default is to use the diceSides for the map.  this property is optional and is only used when you have "Use Bombing Max Dice Sides And Bonus" turned on.  this property is no longer affected by "Low Luck for Bombing and Territory Damage".
                  bombingBonus						values: is a number added to the die rolled, to give the total cost [displayed as a new die rolled], for strategic bombing and rockets only.  this property is optional (default is zero) and is only used when you have "Use Bombing Max Dice Sides And Bonus" turned on.  
                                          this property is no longer affected by "Low Luck for Bombing and Territory Damage". Can be negative to simulate bombers potentially missing and doing no damage.
                                          example: if you want a unit to throw a 12 sided die, then add 4 onto the result, you would do: <option name="bombingMaxDieSides" value="12"/> and <option name="bombingBonus" value="4"/>
                  bombingTargets						values: is a list of units that this unit may strategic bomb or rocket attack.  if not present, then all units that can be damaged are legal targets. example: <option name="bombingTargets" value="factory:bunker:airfield:harbour"/>
  carrierCost						values: the space this unit takes up when sitting on a carrier. if set to 0 then air units can even land on sea zones without a carrier being present (think sea planes)
                  carrierCapacity						values: the amount of space or air unit this unit can carry.
                  
                  canBombard						values: allows a sea unit to bombard the enemy during an amphibious assault
 bombard							values: the value this unit bombards at. defaults to the attack value of the unit if missing
                  blockade						values: allows the unit to do damage up to the value of land territories surrounding a blockade zone, to the enemy's income
                  
                  canBeDamaged						values: sets if a unit can be attacked by strategic bombing raids or by rockets.  isFactory also allows these things
                  maxDamage						values: is the total bombing damage the unit can take (defaults to 2 if not set).  If a factory, and canProduceXUnits = -1 or is missing then maxDamage will be a multiple of the territory value (maxDamage defaults to 2 if canProduceXUnits = -1), otherwise it will be a set number
                                          So for example, if the unit isFactory Or canProduceUnits, And canProduceXUnits = -1, And maxDamage = 3, THEN you will be able to do 3x the territory value in damage to this unit.
                                          If However, canProduceXUnits = 2, and maxDamage = 3, then you can do up to 3 damage to this unit.
                  maxOperationalDamage					values: is used together with only the following options: isAirBase, canScramble, givesMovement, repairsUnits, requiresUnits, requiresUnitsToMove, isRocket, airborneBases (tech), and airborneTypes (tech). Determines if those features are active based on the current damage of the unit not exceeding the value assigned to this option. A disabled unit will not participate in combat or be able to move.  Does not impact isFactory or canProduceUnits.
                  canDieFromReachingMaxDamage				values: means that if this unit reaches its maxDamage, then it will die.  maxDamage must be larger than zero
                  isInfrastructure					values: means a unit does not participate in combat, and they will be captured if the attacker is successful
                  destroyedWhenCapturedFrom				values: is a list of players who destroy a non-combat unit instead of letting it be captured.  destroyedWhenCapturedFrom just takes the value input then adds "FROM:" to the beginning, then calls destroyedWhenCapturedBy with the new value. This can't be set by triggers, use destroyedWhenCapturedBy instead.
                  destroyedWhenCapturedBy					values: is a list of the players who destroy this non-combat unit instead of capturing it.  all non-combat units are normally captured by default. is a colon delimited list of player names.
                                          You can prefix them with single instance of "BY:" or "FROM:" in order to determine if it is being captured by, or captured from, that determines if the unit is destroyed.
                                          examples: <option name="destroyedWhenCapturedBy" value="BY:Chinese:Japanese"/> and <option name="destroyedWhenCapturedBy" value="FROM:Russians:Chinese"/>
                  whenCapturedChangesInto					values: allows a unit to change into a different unit when captured from a specific player to a specific player.  "fromPlayer:toPlayer:transferAttributes:unitType:numberOfUnits".  accepts "any" instead of a player name. allows multiple.
                                          examples: <option name="whenCapturedChangesInto" value="any:any:true:Minor_Factory:1"/> and <option name="whenCapturedChangesInto" value="Russians:Germans:false:gold:3:lumber:1"/>
                  whenCapturedSustainsDamage				values: unit takes specified amount of damage when captured
                                          examples: <option name="whenCapturedSustainsDamage" value="5"/>
                  isAirBase						values: allows units with canScramble and requiresAirbaseToIntercept function from a territory with this unit
                  maxScrambleCount					values: max number of units which can scramble from this air base. defaults to infinite.
                  maxInterceptCount					values: max number of units which can intercept from this air base. defaults to infinite.
                  givesMovement						values: allows a unit to give movement to other units. Colon delimited list of an integer followed by 1 or more unit types
                  repairsUnits						values: is a colon delimited list of all the units this unit can repair. it should start with the amount to be repaired (or use 'count' for the amount to be repaired) each turn. if not used, defaults to 1.
                                          units to be repaired must be in the same territory as this unit. unless the unit being repaired is sea, and the unit repairing it is land, in which case the sea unit must be adjacent to the land unit
                                          example: option name="repairsUnits" value="1:battleship:super_carrier"
                  whenCombatDamaged					values: this property lets you set certain behaviors for when this unit is damaged. the value is the effect, while the count is the damage from where to where. (example: <option name="whenCombatDamaged" value="unitsMayNotLandOnCarrier" count="1:2"/>)
                                          units start at zero combat damage, and usually die at 1 damage. some units have 2 hp, so you can use this with 1:1 to say that when a unit has 1 damage they have this effect.
                                          currently only allows: unitsMayNotLandOnCarrier, unitsMayNotLeaveAlliedCarrier
                  whenHitPointsDamagedChangesInto				values: allows this unit to change into another unit if it takes a certain amount of damage in combat, primarily used for having weaker versions of a unit
                                          examples: <option name="whenHitPointsDamagedChangesInto" value="damage:transferAttributes:unitType"/>
                                          damage - specifies how many points of damage, transferAttributes - if new unit keeps damage amount, unitType - new unit
                  whenHitPointsRepairedChangesInto			values: allows this unit to change into another unit during repair if it has a certain amount or 0 damage, primarily used to repair weaker versions of a unit
                                          examples: <option name="whenHitPointsRepairedChangesInto" value="damage:transferAttributes:unitType"/>
                                          damage - specifies how many points of damage, transferAttributes - if new unit keeps damage amount, unitType - new unit
                  
                  canIntercept						values: allows this unit to participate in air raids (air battles for strat bombing), as a defending unit
                  requiresAirbaseToIntercept				values: if true then intercepting units must have an airbase like scrambling
                  canEscort							values: allows this unit to participate in air raids (air battles for strat bombing), as an attacking unit
                  canAirBattle						values: allows this unit to participate in air battles (for normal battles), as an attacking or defending unit
          airDefense							values: defense value of interceptor
          airAttack							values: attack value of escort

                  fuelCost							values: fuelCost is a list of at least one resource that get used up for each point of movementCost a unit does.  (can have multiple). example: <option name="fuelCost" value="Fuel" count="5"/> and <option name="fuelCost" value="PUs" count="1"/>
fuelFlatCost						values: charges fuel flat cost if unit moves any amount during turn rather than for each movement point. (can have multiple). example: <option name="fuelFlatCost" value="Fuel" count="2"/>
            tuv									values: overrides default TUV calculation for the unit based on production cost

                production related:
                  isFactory							values: just sets: canBeDamaged, isInfrastructure, canProduceUnits, isConstruction, constructionType = "factory", maxConstructionsPerTypePerTerr = 1, constructionsPerTerrPerTypePerTurn = 1
                                          isFactory is no longer its own variable. Instead isFactory just sets the above variables. setting is factory will possibly overwrite those variables, so do not use it if you are planning to set those variables to something else.
                                          allows a unit to produce other units, not participate in combat, be placed anywhere you owned at the beginning of the turn, be capturable, and be damaged by rockets and raids
                  canProduceXUnits					values: allows a factory-type unit to produce a set amount of units no matter where it is located.  if -1 then it will produce at the value of the territory where it is.
                                          if greater than -1, you must have "maxDamage" set to some number if the unit is also "canBeDamaged" or "isFactory".  defaults to -1 if missing.  this option will only work if "Damage From Bombing Done To Units Instead Of Territories" game property is turned on.
                  canProduceUnits						values: allows a unit to be a factory, without all the other things that come with being a factory (like capturable, land, non-combat, etc).  So if you want flying factories, go ahead. Just don't complain if you get errors.
                  createsUnitsList					values: is a list of units that this unit will create every turn at the end of the turn. can have multiple instances
                  createsResourcesList				values: is a list of resources that this unit will create every turn at the end of the turn. can have multiple instances

                placement related:
maxBuiltPerPlayer					values: is the number of this unit that can be BUILT by a player.  If they have fewer than this number they can build more, if they have more than this number they can not build more
                        [this does not cause excess ones to disappear, and the player can still capture more and more of them if they are capturable]
                  canOnlyBePlacedInTerritoryValuedAtX	values: the minimum territory value to place the unit there. defaults to "-1" which means anywhere
                  unitPlacementRestrictions			values: a list of territories or territoryEffects where this unit can not be built. List can contain any number of territories, including sea zones, and territoryEffects. If using territoryEffects then TerritoryAttachments specifying the territoryEffects must come before UnitAttachments in the XML.
                                          every unit may have a list, and the lists may be different for each unit. default is no list.
                                          the list may be turned on/off with "Unit Placement Restrictions" game property
                  unitPlacementOnlyAllowedIn			values: is the direct inverse of unitPlacementRestrictions
                  requiresUnits						values: is a list of units required to be present in the territory in order for you to build this unit there.  Can have multiple instances. Only one instance needs to be true in order to build.
                                          examples: <option name="requiresUnits" value="CombatEngineer:Truck"/> would mean we need at least one CombatEngineer AND at least one Truck in order to build there.
                                          If after that line we had a second line saying <option name="requiresUnits" value="SuperEngineer"/> then it would mean OR we need at least one SuperEngineer.
                  consumesUnits						values: requires that a unit be present in a territory, then when this unit is placed the other units are destroyed / upgraded into this unit.  Can have multiple instances of this, which means it consumes multiple types of units.
                  isConstruction						values: allows the unit to be placed in territories that don't contain factories. only "constructionsPerTerrPerTypePerTurn" contructions of "constructionType" may be placed per territory per turn.
                                          may have only "maxConstructionsPerTypePerTerr" constructions Total per territory with/without a factory unless you enable "More Constructions with/without Factory", which will allow up a total number of up to the territory value
                                          and "Unlimited Constructions" game property allows unlimited constructions total in a territory
                  constructionType					values: is just a unique string which identifies what kind of construction this.
                                          if two or more constructions have the exact same constructionType (and the same PerType rules), then they will follow the same rules for placement.
                                          example: if you have little_bunker and big_bunker both as type "bunker", with constructionsPerTerrPerTypePerTurn=2, then you could place 2 littles, or 2 bigs, or 1 little and 1 big in a territory
                                          if you do not want this unit to be effected by the global properties "More Constructions with/without Factory" and "Unlimited Constructions", then make sure the type ends in "structure". example: "harbour_structure"
                  constructionsPerTerrPerTypePerTurn	values: is how many of this type you can place in a territory every turn
                  maxConstructionsPerTypePerTerr		values: is how many max of this type may be in a territory. this must be greater than constructionsPerTerrPerTypePerTurn
                                          if "More Constructions with/without Factory" = true, then the minimum will be either maxConstructionsPerTypePerTerr or the PU value of the territory (whichever number is greater) in territories with/without factories
                                          if "Unlimited Constructions" = true, then this number becomes 10000
                  special								values:	a colon delimited list of possible options for this unit.  Currently only supports: "canOnlyPlaceInOriginalTerritories"

                sub/destroyer related:
                  isDestroyer						values: cancels out an isSub unit's first strike and submerge abilities, and allows it to be hit by air units if using ww2v3 rules
                  isSub							values: allows the unit to roll dice before other units and submerge or retreat from battle even on defense
                                  this is a shortcut option that sets the below 6 unit options based on the global sub properties specifically:
                                  sets canEvade and isFirstStrike to true
                                  sets canNotTarget to all air units
                                  sets canNotBeTargetedBy to all air unit types if "Air Attack Sub Restricted" 
                                  sets canBeMovedThroughEnemies to true if "Ignore Sub In Movement"
                                  sets canMoveThroughEnemies to true if "Submersible Subs" 
  canEvade						values: whether the unit can submerge or escape battle
  isFirstStrike						values: whether to roll dice and take casualties before regular units
  canNotTarget						values: colon delimited list of units that this unit can't target in battles, ex. subs not being able to target air units
  canNotBeTargetedBy					values: colon delimited list of units that can't target this unit, ex. air units not being able to target subs
  canMoveThroughEnemies					values: whether unit is unblockable and treats hostile territories as friendly
                  canBeMovedThroughByEnemies				values: whether enemies can move through territories if only these types of units are present (would also need blitz for enemy land territories)

                aa related:
                  isAA								values: just sets isAAmovement, isAAforCombatOnly, isAAforBombingThisUnitOnly, isAAforFlyOverOnly, isInfrastructure, and isRocket to true.
                  isAAmovement						values: just sets canNotMoveDuringCombatMove to "true", and only for aa guns it will set the stacking limits (movementLimit, attackingLimit, placementLimit) to "1:allied" when playing by classic rules
                  attackAA							values: the value that an isAA unit will attack at, for shooting at air units before battle
                  attackAAmaxDieSides					values: sets the dice sides for aa guns.  defaults to whatever you chose above in diceSides (or 6 if you didn't choose).  All units with the same typeAA must have the same dice sides.
                                          Be Warned that all aa attack values (including with Radar and without Radar), MUST divide into attackAAmaxDieSides without remainders, or else there WILL be errors in LowLuck!
                  offensiveAttackAA 					values: same as attackAA but for offensive side
                  offensiveAttackAAmaxDieSides 		values: same as attackAAmaxDieSides but for offensive side
                  maxAAattacks						values: sets how many times this unit may fire its AA guns. Defaults to -1, which means infinite. If not infinite, then aa guns can stack.
                                          (If you have multiple aa of the same type-group in a territory, and they have different attack values or dicesides, and different maxAAattacks, then what happens is that the engine will roll for the best attack/diceSides and for the best maxAAattacks, even if that is two different units
                                          For example, if you have an aa gun that has infinite attacks and rolls a 4/20, and you have another gun with only one attack and rolls 3/6, then you will end up rolling infinite times at 3/6.  This might be fixed in the future.)
                  mayOverStackAA						values: sets if this unit may fire aa more times than there are aircraft (default = false).
                  maxRoundsAA 						values: sets how many rounds the AA may fire in. negative (-1) means infinite. (default = 1).
                  damageableAA						values: sets if this unit can damage a two-hitpoint unit, instead of killing it instantly with aa fire (default = false = kill instantly).
                  isAAforCombatOnly					values: allows this unit to be an AA gun for normal combat only.  it will not defend against strategic bombing raids.
                  isAAforBombingThisUnitOnly			values: allows this unit to be an AA gun only when this unit is directly attacked by a strategic bombing raid (currently defends against all strategic bombing attacks in this territory, not just against this unit).  it will not defend against a normal attack.
                  isAAforFlyOverOnly					values: allows this unit to be an AA gun only when being flown over. if the air unit moves into this territory and stays, then this will not fire.
                                          isAAforFlyOverOnly will only work if "AA Territory Restricted" is turned off, and will normally only fire during combat move and not during noncombat move, unless you also turn on "Always on AA".
                  typeAA								values: any string which identifies this type-group of aa guns. Only 1 aa gun per group may fire (unless you've set maxAAattacks). (defaults to "AA")
                                        Warning: all units with the same typeAA must have the same dice sides, or else you will experience weird results.
                  targetsAA							values: a list of unit types which this aa gun can hit. (defaults to all air units) (any aa guns in the same group should have the same targetsAA)
                  willNotFireIfPresent				values: a list of unit types for which if they are present in the battle, this aa gun will not fire.
                  isRocket							values: allows this unit to become a rocket if the player has the rocket technology.  If the unit is named exactly "aaGun" then it will require an image called "rockets".  If the unit is named anything else, then it will require an image with "_rockets" appended to its original name
                  canNotMoveDuringCombatMove			values: true or false, defaults to false, does not allow this unit to move during 'combat move phase'
                  movementLimit						values: only affects normal movement. the count is equal to the number of this unit allowed per territory, and the value is equal to "owned" (we are only counting units owned by each player), or "allied" (allied too), or "total" (which counts enemy units too)
                  attackingLimit						values: only affects movement into enemy territory/units. the count is equal to the number of this unit allowed per territory, and the value is equal to "owned" (we are only counting units owned by each player), or "allied" (allied too), or "total" (which counts enemy units too)
                  placementLimit						values: only affects placement. the count is equal to the number of this unit allowed per territory, and the value is equal to "owned" (we are only counting units owned by each player), or "allied" (allied too), or "total" (which counts enemy units too)
                                          example: <option name="placementLimit" value="allied" count="1"/>
                  